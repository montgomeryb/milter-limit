# milter-limit configuration file.
# This should be installed in /etc/mail/milter-limit.conf

# name of the milter.  this needs to match the filter name that is configured
# in your sendmail.mc e.g.:
# INPUT_MAIL_FILTER(`milter-limit', `S=local:/var/run/milter-limit.sock')
name = milter-limit

# where state information is stored such as the PID file.
# state_dir = /var/run/milter-limit

# which driver backend to use.  Current choices are SQLite, BerkeleyDB
driver = SQLite

# number of servers and requests per server
max_children = 5
max_requests_per_child = 100

# user and group to run as
user = nobody
group = nobody

# expire and limit specify the rate at which messages can be sent per sender.
# limit is the number of messaegs, and expire is the number of seconds in which
# the limit of messages can be sent.  This example allows 100 messages per day
# per sender address.
expire = 86400
limit  = 100

# milter reply type, can be "defer" or "reject".
# defer returns a 4xx response so that the MTA will retry later.
# reject returns a 5xx response so that the MTA will NOT retry later.
# default is reject
reply = reject

# by default the envelope sender is the address that is limited. You can
# override this with any symbol from the milter context getsymval() here.
# E.g.: {auth_authen} will use the {auth_authen} symbol and will limit based on
# the authenticated SMTP user.
# limit_from = {auth_authen}
#

# connection specifys the socket that the milter will listen on.  The default
# is to use the socket configured under the "name" of this milter in sendmail.cf
# (default: milter-limit)
# connection = unix:/tmp/milter-limit.sock

# driver specific configuration settings.  This example uses the SQLite
# driver.
[driver]
home = /var/db/milter-limit
file = stats.db
mode = 0644

# For BerkeleyDB, use something like this:
#[driver]
#home = /var/db/milter-limit
#file = bdb-stats.db

# syslog settings.
# See Sys::Syslog::openlog()
[log]
identity = milter-limit
facility = mail
options = pid
